#!/bin/bash

# This script provides the main interface for interacting with the command line utilities used for
# configuring the behaviour of the Arduino Light Show.
#
# Arguments: *see <utility file: error messages: "lightshow-cli: Usage:">*
#
# Return status:
# 1 on incorrect usage, otherwise $? of the given subcommand


#-Preliminaries---------------------------------#


# CLI-SUPPORTING-FILES-FOLDER
readonly cli_supporting_files_folder="."

# Imports CLI utilities.
. "$cli_supporting_files_folder/Libraries/utilities.sh"
. "$cli_supporting_files_folder/Libraries/constants.sh"


#-Constants-------------------------------------#


# The function wrapping all constant-declarations for this script.
function declare_constants {
   # Gets the location of the folder holding the program file(s).
   readonly program_folder="$cli_supporting_files_folder/`location_of_ --repo-program-directory`"
   # Gets the program file, which should be the only file in the program-folder ending in ".ino".
   readonly program_file="$program_folder/`ls -1 "$program_folder" | egrep '\.ino$'`"

   # Binds the subcommand passed as first argument.
   readonly subcommand=$1
}


#-Main------------------------------------------#


declare_constants "$@"
# Shifts the given arguments to be passable to the subcommand.
shift

# Runs the script corresponding to the given subcommand, or prints and error message and returns on
# failure if the given subcommand was invalid.
case "$subcommand" in
   uninstall)
      "$cli_supporting_files_folder/uninstaller.sh" "$@" ;;
   arduino-trait)
      "$cli_supporting_files_folder/Scripts/arduino_trait.sh" "$@" ;;
   get-configuration)
      "$cli_supporting_files_folder/Scripts/threshold_configuration.sh" "$@" ;;
   apply-configuration)
      "$cli_supporting_files_folder/Scripts/apply_configuration.sh" "$@" ;;
   push-program)
      "$cli_supporting_files_folder/Scripts/push_program.sh" "$@" ;;
   configure-thresholds)
      "$cli_supporting_files_folder/Scripts/configure_thresholds.sh" "$@" ;;
   *)
      echo -e "`message_for_ --lcli-usage`"; exit 1 ;;
esac
